--- a/node_modules/esptool-js/webserial.js
+++ b/node_modules/esptool-js/webserial.js
@@ -42,7 +42,7 @@ class Transport {
         return out_data;
     }

-    write = async (data) => {
+    async write(data) {
         const writer = this.device.writable.getWriter();
         var out_data = this.slip_writer(data);

@@ -103,7 +103,7 @@ class Transport {
         return packet;
     }

-    read = async ({timeout=0, min_data=12} = {}) => {
+    async read({timeout=0, min_data=12} = {}) {
         console.log("Read with timeout " + timeout);
         let t;
         let packet = this.left_over;
@@ -145,7 +145,7 @@ class Transport {
         return packet;
     }

-    rawRead = async ({timeout=0} = {}) => {
+    async rawRead({timeout=0} = {}) {
         if (this.left_over.length != 0) {
             const p = this.left_over;
             this.left_over = new Uint8Array(0);
@@ -172,21 +172,21 @@ class Transport {
         }
     }

-    setRTS = async (state) => {
+    async setRTS(state) {
         await this.device.setSignals({requestToSend:state});
     }

-    setDTR = async (state) => {
+    async setDTR(state) {
         await this.device.setSignals({dataTerminalReady:state});
     }

-    connect = async ({baud=115200} = {}) => {
+    async connect({baud=115200} = {}) {
         await this.device.open({baudRate: baud});
         this.baudrate = baud;
         this.left_over = new Uint8Array(0);
     }

-    disconnect = async () => {
+    async disconnect() {
         await this.device.close();
     }
 }
